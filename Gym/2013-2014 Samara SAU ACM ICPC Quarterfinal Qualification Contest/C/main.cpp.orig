#include <cstdio>
#include <iostream>
#include <unordered_map>
#include <map>

using namespace std;
/*
int main()
{
    long long int cnt, target;
    while (scanf("%I64d %I64d", &cnt, &target) == 2) {
        unordered_map<long long int, long long int> DP_map;

        int sum_so_far = 0;
        DP_map[sum_so_far] = 1;
        long long int ans = 0;
        for (int i = 0; i < cnt; i++) {
            long long int tmp;
            scanf("%I64d", &tmp);
            sum_so_far += tmp;
            if (DP_map.find(sum_so_far - target) != DP_map.end()) {
                ans += DP_map[sum_so_far - target];
            }

            if (DP_map.find(sum_so_far) != DP_map.end())
                DP_map[sum_so_far]++;
            else
                DP_map[sum_so_far] = 1;
        }

        printf("%I64d\n", ans);
    }

    return 0;
}
*/

int main() {
  cin.sync_with_stdio(0);
  int N;
  long long a, s = 0, S, ans = 0;
  cin >> N >> S;
  map<long long, int> M;
  M[s] = 1;
  for (int i = 0; i < N; i++) {
    cin >> a;
    s += a;
    if (M.find(s - S) != M.end())
      ans += M[s - S];
    //	cout << s << "\n";
    M[s] = M[s] + 1;
  }
  cout << ans << "\n";
  return 0;
}
